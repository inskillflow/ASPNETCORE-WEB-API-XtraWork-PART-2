╔═══════════════════════════════════════════════════════════════════╗
║                    DÉMARRAGE ULTRA-RAPIDE                         ║
║                      API XtraWork                                 ║
╚═══════════════════════════════════════════════════════════════════╝

📋 VOTRE PROJET EST PRÊT ! Compilation : 0 erreurs, 0 warnings ✅

┌───────────────────────────────────────────────────────────────────┐
│ 🚀 MÉTHODE EXPRESS (2 MINUTES)                                    │
└───────────────────────────────────────────────────────────────────┘

TERMINAL 1 (PowerShell) :
────────────────────────
cd C:\Users\rehou\Downloads\2-SuiviEtudiantsEtape2\SuiviEtudiantsEtape2\XtraWork
dotnet run

⏸️  LAISSER OUVERT

TERMINAL 2 (NOUVEAU PowerShell) :
──────────────────────────────────
cd C:\Users\rehou\Downloads\2-SuiviEtudiantsEtape2\SuiviEtudiantsEtape2\XtraWork\scripts
.\scenario1.ps1

✅ C'EST TOUT ! Le script teste TOUT automatiquement !

┌───────────────────────────────────────────────────────────────────┐
│ 🌐 MÉTHODE SWAGGER (3 MINUTES)                                    │
└───────────────────────────────────────────────────────────────────┘

1. Lancer l'API :
   cd XtraWork
   dotnet run

2. Ouvrir navigateur :
   https://localhost:7033/swagger

3. Tester POST /api/auth/register

4. Copier le token

5. Cliquer "Authorize" 🔓 → Entrer : Bearer {token}

6. Tester tous les endpoints !

┌───────────────────────────────────────────────────────────────────┐
│ 📚 DOCUMENTATION COMPLÈTE                                         │
└───────────────────────────────────────────────────────────────────┘

START_ICI.txt                 ← Vous êtes ici (démarrage express)
INSTRUCTIONS_FINALES.md       → Vue d'ensemble complète
DEMARRAGE_RAPIDE.md          → Guide 5 minutes détaillé
README.md                     → Documentation complète
COMMENT_TESTER_SCENARIO1.md  → Guide de test
scenario1.md                  → Commandes de test détaillées
CORRECTIONS_EFFECTUEES.md     → Liste des corrections
COMMANDES_ESSENTIELLES.txt    → Aide-mémoire

┌───────────────────────────────────────────────────────────────────┐
│ 🎯 RÉSULTAT DU SCÉNARIO                                           │
└───────────────────────────────────────────────────────────────────┘

Le script scenario1.ps1 va créer :

✅ 3 utilisateurs (User, Manager, Admin)
✅ 3 titres de poste
✅ 2-3 employés
✅ Tester TOUTES les fonctionnalités
✅ Afficher un résumé complet

┌───────────────────────────────────────────────────────────────────┐
│ ⚠️  PRÉREQUIS (À VÉRIFIER UNE SEULE FOIS)                         │
└───────────────────────────────────────────────────────────────────┘

□ .NET 8 installé
  → Tester : dotnet --version

□ SQL Server accessible
  → Tester : sqlcmd -S LAPTOP-81IAD844 -E -Q "SELECT 1"

□ PowerShell disponible
  → Déjà installé sur Windows

┌───────────────────────────────────────────────────────────────────┐
│ 🔧 PROBLÈMES FRÉQUENTS                                            │
└───────────────────────────────────────────────────────────────────┘

"Script bloqué" ?
→ Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser

"Cannot connect to database" ?
→ Vérifier SQL Server démarré : services.msc

"Jwt:Key manquant" ?
→ dotnet user-secrets set "Jwt:Key" "7e6da5d9e5514ce288683845e6068df782a23f6c15fb43cd92e19b4147d8ce95"

┌───────────────────────────────────────────────────────────────────┐
│ 📊 FONCTIONNALITÉS TESTÉES                                        │
└───────────────────────────────────────────────────────────────────┘

✓ Health Check
✓ Authentification JWT
✓ Autorisation par rôles (User, Manager, Admin)
✓ CRUD Titles complet
✓ CRUD Employees complet
✓ Validation FluentValidation
✓ Gestion des erreurs (401/403/404/400)

┌───────────────────────────────────────────────────────────────────┐
│ 🌐 URLs DE L'API                                                  │
└───────────────────────────────────────────────────────────────────┘

API         : https://localhost:7033
Swagger     : https://localhost:7033/swagger
Health      : https://localhost:7033/health

┌───────────────────────────────────────────────────────────────────┐
│ 💡 COMMANDES UTILES                                               │
└───────────────────────────────────────────────────────────────────┘

# Lancer l'API
cd XtraWork
dotnet run

# Tester l'API (script automatique)
cd XtraWork\scripts
.\scenario1.ps1

# Tester l'API (script rapide)
cd XtraWork\scripts
.\test-api.ps1

# Compiler
dotnet build

# Voir les logs
cd logs
Get-Content xtrawork-*.txt -Tail 50

# Changer un rôle en Admin
sqlcmd -S LAPTOP-81IAD844 -E -Q "USE XtraWork; UPDATE Users SET Role = 'Admin' WHERE Username = 'admin';"

┌───────────────────────────────────────────────────────────────────┐
│ 🎉 ACTION IMMÉDIATE                                               │
└───────────────────────────────────────────────────────────────────┘

FAITES CECI MAINTENANT :

1. Ouvrir 2 terminaux PowerShell

2. Terminal 1 :
   cd C:\Users\rehou\Downloads\2-SuiviEtudiantsEtape2\SuiviEtudiantsEtape2\XtraWork
   dotnet run

3. Terminal 2 :
   cd C:\Users\rehou\Downloads\2-SuiviEtudiantsEtape2\SuiviEtudiantsEtape2\XtraWork\scripts
   .\scenario1.ps1

4. Regarder le résultat !

┌───────────────────────────────────────────────────────────────────┐
│ ✅ ÉTAT DU PROJET                                                 │
└───────────────────────────────────────────────────────────────────┘

Compilation    : ✅ 0 erreurs, 0 warnings
Packages       : ✅ Tous installés
Configuration  : ✅ Complète
Documentation  : ✅ 7 fichiers créés
Tests          : ✅ Scripts automatiques
Code           : ✅ 100% fonctionnel

┌───────────────────────────────────────────────────────────────────┐
│ 📞 BESOIN D'AIDE ?                                                │
└───────────────────────────────────────────────────────────────────┘

Lire : INSTRUCTIONS_FINALES.md    (vue d'ensemble complète)
Lire : DEMARRAGE_RAPIDE.md       (guide détaillé 5 min)
Lire : README.md                  (documentation complète)

╔═══════════════════════════════════════════════════════════════════╗
║                  🚀 BON DÉVELOPPEMENT ! 🎉                        ║
╚═══════════════════════════════════════════════════════════════════╝
